[{"/Users/pratibha/Documents/Brainstation/productQ/client/src/index.js":"1","/Users/pratibha/Documents/Brainstation/productQ/client/src/components/PostQuestion/PostQuestion.jsx":"2","/Users/pratibha/Documents/Brainstation/productQ/client/src/App.jsx":"3","/Users/pratibha/Documents/Brainstation/productQ/client/src/components/Header/Header.jsx":"4","/Users/pratibha/Documents/Brainstation/productQ/client/src/components/PostAnswer/PostAnswer.jsx":"5","/Users/pratibha/Documents/Brainstation/productQ/client/src/components/QuestionDetails/QuestionDetails.jsx":"6","/Users/pratibha/Documents/Brainstation/productQ/client/src/components/Aside/Aside.jsx":"7","/Users/pratibha/Documents/Brainstation/productQ/client/src/components/Button/Button.jsx":"8","/Users/pratibha/Documents/Brainstation/productQ/client/src/components/AnswerCard/AnswerCard.jsx":"9","/Users/pratibha/Documents/Brainstation/productQ/client/src/components/FeedbackCard/FeedbackCard.jsx":"10","/Users/pratibha/Documents/Brainstation/productQ/client/src/components/AnswerList/AnswerList.jsx":"11","/Users/pratibha/Documents/Brainstation/productQ/client/src/components/QuestionCard/QuestionCard.jsx":"12","/Users/pratibha/Documents/Brainstation/productQ/client/src/components/QuestionList/QuestionList.jsx":"13","/Users/pratibha/Documents/Brainstation/productQ/client/src/components/FeedbackList/FeedbackList.jsx":"14"},{"size":1220,"mtime":1616599877420,"results":"15","hashOfConfig":"16"},{"size":6560,"mtime":1617004691149,"results":"17","hashOfConfig":"16"},{"size":3440,"mtime":1616617940084,"results":"18","hashOfConfig":"16"},{"size":1191,"mtime":1616366088590,"results":"19","hashOfConfig":"16"},{"size":3999,"mtime":1617007338583,"results":"20","hashOfConfig":"16"},{"size":3630,"mtime":1617010097000,"results":"21","hashOfConfig":"16"},{"size":717,"mtime":1616402349235,"results":"22","hashOfConfig":"16"},{"size":406,"mtime":1616624834655,"results":"23","hashOfConfig":"16"},{"size":2081,"mtime":1617008314582,"results":"24","hashOfConfig":"16"},{"size":1141,"mtime":1616611552390,"results":"25","hashOfConfig":"16"},{"size":1026,"mtime":1617006719042,"results":"26","hashOfConfig":"16"},{"size":2035,"mtime":1617008379649,"results":"27","hashOfConfig":"16"},{"size":1406,"mtime":1617008994234,"results":"28","hashOfConfig":"16"},{"size":1455,"mtime":1616611946200,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"1pjoz17",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"33"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"33"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"33"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"33"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"33"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"33"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"33"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"33"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"/Users/pratibha/Documents/Brainstation/productQ/client/src/index.js",["69"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, BrowserRouter as Router } from \"react-router-dom\";\nimport {Switch, Route, Redirect} from \"react-router-dom\";\n// import './index.css';\nimport App from './App';\nimport Header from './components/Header/Header';\nimport PostQuestion from './components/PostQuestion/PostQuestion';\nimport PostAnswer from './components/PostAnswer/PostAnswer';\nimport QuestionDetails from './components/QuestionDetails/QuestionDetails';\n// import \"./styles/main.scss\";\n// import './index.scss';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Header />\n      <Switch>\n          <Route path=\"/\" component={App} exact />\n          {/* <Route path=\"/questions\" component={App} exact /> */}\n          {/* <Route path=\"/question/:id\" component={App} /> */}\n          <Route path=\"/question/:id/:description\" component={QuestionDetails} />\n          <Route path=\"/postQuestion\" component={PostQuestion} />\n          <Route path=\"/postAnswer\" component={PostAnswer} />\n          <Route path=\"/*\">\n            <Redirect to=\"/\" />\n          </Route>\n      </Switch>\n      </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n",["70","71"],"/Users/pratibha/Documents/Brainstation/productQ/client/src/components/PostQuestion/PostQuestion.jsx",[],"/Users/pratibha/Documents/Brainstation/productQ/client/src/App.jsx",["72","73","74","75","76","77"],"// import './App.css';\nimport React, {Component} from \"react\";\nimport { Link } from 'react-router-dom';\nimport axios from \"axios\";\nimport avatar from \"./assets/images/user-image.png\";\nimport Aside from './components/Aside/Aside';\nimport QuestionCard from \"./components/QuestionCard/QuestionCard\";\nimport AnswerCard from \"./components/AnswerCard/AnswerCard\";\nimport FeedbackCard from \"./components/FeedbackCard/FeedbackCard\";\n// import TimeStamp from './components/TimeStamp/TimeStamp';\n\nimport './App.scss';\nimport QuestionList from \"./components/QuestionList/QuestionList\";\nimport AnswerList from \"./components/AnswerList/AnswerList\";\n\nclass App extends Component{\n  state={\n    _isMounted:false,\n    activeQuestionID:\"1\",\n    activeQuestionIndex:0,\n    questions:[],\n    questionDetails:{\n      answers:[{\n        feedbacks:[]\n      }]\n    }\n    // questionAnswerData: questionAnswerDetailsData\n  }\n\n  componentDidMount(){\n    this._isMounted = true;\n    this.getQuestionDetailsData(this.state.activeQuestionID);\n    this.getQuestionsData();\n  }\n  \n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // console.log(\"comp updated\", this.props);\n    const { id } = this.props.match.params; \n    if (id !== undefined && prevState.questionDetails.id !== (id)) {\n      this.getQuestionDetailsData(id);\n    }\n  }\n\n  setActiveQuestion = (id) => {\n    const questionIndex = this.state.questionAnswerData.findIndex((questionAnswer) => questionAnswer.id === id);\n    // set current question to the id from questionList click event and also set the index of the current question\n    this.setState({\n      activeQuestionID: id,\n      activeQuestionIndex: questionIndex,\n    });\n  };\n\n  getQuestionsData = ()=>{\n    axios\n    .get(`http://localhost:8081/questions`)\n      .then((response)=>{\n        console.log(\"questions from api\",response);\n        this.setState({\n          questions: response.data,\n        });\n      })\n      .catch((error)=>console.log(error));\n  };\n\n  getQuestionDetailsData = (id)=>{\n    console.log(\"before axios request\",id);\n    axios\n      .get(`http://localhost:8081/questions/${id}`)\n      .then((response)=>{\n        console.log(\"questions details from api\",response.data);\n        this.setState({\n          questionDetails: response.data,\n        });\n      })\n      .catch((error)=>console.log(error));\n  };\n\n  render() {\n    const {questions, questionDetails, activeQuestionID, activeQuestionIndex} = this.state;\n    console.log(\"questions from app.js\",questions);\n    console.log(\"questionDetails from app.js\",questionDetails);\n    console.log(\"activeQuestionID from app.js\",activeQuestionID);\n    console.log(\"activeQuestionIndex from app.js\",activeQuestionIndex);\n\n  return (\n    <div>\n      <main className=\"main-section\">\n        <Aside/>\n\n\n        <section className=\"main-section__right\">\n          {/* <Link to={`/postAnswer`} className=\" \">\n            <button className=\" \" type=\"submit\">Post Answer</button>\n          </Link> */}\n          <QuestionList \n          questions={questions}\n          questionDetails={questionDetails}\n          currentQuestionID = {this.props.match.params.id ?? \"1\"}\n          setActiveQuestion = {this.setActiveQuestion}/>\n          {/* <AnswerList \n          questionAnswerData={questionDetails[activeQuestionID]} />         */}\n        \n        </section>\n\n\n      </main>\n\n    </div>\n  );\n}\n}\n\nexport default App;\n","/Users/pratibha/Documents/Brainstation/productQ/client/src/components/Header/Header.jsx",["78"],"import React from 'react'\nimport { Link } from 'react-router-dom';\nimport './Header.scss';\n\nimport logo from '../../assets/logos/logo.png';\nimport avatar from \"../../assets/images/user-image.png\";\n\nfunction Header() {\n    return (\n        <div>\n            <header className=\"site-header\">\n                <div className=\"site-header__container\">\n                    <Link to={`/`} className=\"site-header__brand\" >\n                        <img className=\"site-header__logo\" src={logo} alt=\"productQ logo\"/> \n                    </Link>\n                    {/* <div className=\"site-header__group\"> */}\n                    <Link to={`/`} className=\"site-header__signIn\">\n                    <button className=\"site-header__signIn--text\" type=\"submit\">Sign In</button>\n                    </Link>\n\n                    <div className=\"site-header__user\">\n                        <img className=\"site-header__user--image\" src={avatar} alt=\"user image\"/>\n                    </div>\n                {/* </div> */}\n                </div>\n                <h1 className=\"site-header__banner\">Product Manager Interview Questions</h1>\n            </header>\n        </div>\n    )\n}\n\nexport default Header\n","/Users/pratibha/Documents/Brainstation/productQ/client/src/components/PostAnswer/PostAnswer.jsx",["79","80"],"import React from \"react\";\nimport axios from 'axios';\nimport './PostAnswer.scss'; \nimport Button from \"../Button/Button\";\nimport { Link, Redirect} from 'react-router-dom';\n\nclass PostAnswer extends React.Component {\n    state={\n        answer: \"\",\n        questionID: this.props.questionDetails.id,\n        formIsSubmitted: false,\n        showHidePostAnswer: false,\n        questionDetails: this.props.questionDetails\n    };\n    \n\n    updateAnswer = (event) =>{\n        this.setState({\n            answer: event.target.value,\n        });\n    };\n\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n        if (!this.state.answer) {\n            alert(\"answer can not be empty.\");\n            return;\n        }\n        \n        if (this.state.answer) {\n            this.setState({formIsSubmitted:true})\n        }\n        // this.postNewAnswer(this.state.questionID);   \n        this.props.postNewAnswer(this.state.answer);  \n    }\n\n    // postNewAnswer = (id) => {\n    //     // console.log(\"before axios postnewanswer request\", questionID);\n    //     axios\n    //     .post(`http://localhost:8081/questions/${id}`, {\n    //         answer: this.state.answer,\n    //     })\n    //     .then((response) => {\n    //         console.log('response from posting answer to api', response);\n    //         this.setState({\n    //         answer: '',\n    //         });\n    //     })\n    //     .catch((err) => console.log(err));\n    // };\n\n    handleShowHidePostAnswer = (event) => {\n        // event.preventDefault();\n        console.log('showHidePostAnswer');\n        this.setState({\n            showHidePostAnswer: !this.state.showHidePostAnswer\n        })\n    }\n\n    render(){\n        const questionDetails = this.props.questionDetails;\n        console.log(\"this is from postanswer\", questionDetails);\n        const questionID = this.props.questionDetails.id;\n        console.log(\"this is from postanswer questionID\", questionID)\n\n        const showHidePostAnswer = this.state.showHidePostAnswer ? null : (<div><PostAnswer questionDetails={questionDetails}/></div>)\n        \n        if(this.state.formIsSubmitted){\n            // return <Redirect to={`/`}/>\n            return <Redirect to={`/question/${questionDetails.id}/${questionDetails.description}`}/>\n        }\n        console.log(\"props printing from render postanwer\",this.props)\n        return (\n            <div>\n                {/* <hr className=\"upload__topdivider\"/> */}\n                <section className=\"postAnswer\">\n                    {/* <h1 className=\"upload__title\">Post Answer</h1> */}\n                    {/* <hr className=\"upload__divider\"/> */}\n                    <form id= \"postAnswer__form\" className=\"postAnswer__form\" onSubmit={this.handleFormSubmit}>\n                        {/* <div className=\"postAnswer__formgroups\"> */}\n                            {/* <div className=\"postAnswer__formgroup\"> */}\n                                <label htmlFor=\"answerDescription\" className=\"postAnswer__formLabel\"></label>\n                                <textarea id=\"answer\" className=\"postAnswer__textarea\" name=\"answer_description\" placeholder=\"Add a description of your answer\" onChange={this.updateAnswer}  value= {this.state.answer} ></textarea>\n                            {/* </div>  */}\n                        {/* </div> */}\n                        {/* <hr className=\"upload__divider\"/> */}\n                        <div className=\"postAnswer__buttonGroup\">\n                            <Button type=\"submit\" text=\"Submit\" className=\"postAnswer__submit\"/> \n                                                \n                            <Link to={`/question/${questionDetails.id}/${questionDetails.description}`} >\n                            <Button text=\"CANCEL\" className=\"postAnswer__cancel\" />\n                            </Link>\n                        </div>           \n                    </form>\n                </section>\n                \n            </div>\n        )\n    }\n}\nexport default PostAnswer\n","/Users/pratibha/Documents/Brainstation/productQ/client/src/components/QuestionDetails/QuestionDetails.jsx",["81"],"import React, {Component} from 'react'\nimport axios from \"axios\";\nimport './QuestionDetails.scss';\nimport QuestionCard from '../QuestionCard/QuestionCard';\nimport AnswerList from '../AnswerList/AnswerList';\nimport { Link } from 'react-router-dom';\nimport views from '../../assets/icons/icon-views.svg';\nimport PostAnswer from '../PostAnswer/PostAnswer';\n\nclass QuestionDetails extends Component{\n    state={\n    _isMounted:false,\n    showHidePostAnswer: false,\n    currentid:'',\n    questionDetails:{\n        answers:[{\n        feedbacks:[]\n        }]\n    }\n\n    }\n\n    componentDidMount(){\n        console.log(\"this questiondetails from componentdidmount\",this.props);\n        this._isMounted = true;\n        this.getQuestionDetailsData(this.props.match.params.id);\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    getQuestionDetailsData = (id)=>{\n        console.log(\"before axios request\",id);\n        axios\n        .get(`http://localhost:8081/questions/${id}`)\n        .then((response)=>{\n            console.log(\"questions details from api for QuestionDetails\",response.data);\n            console.log(\"question id details from api for QuestionDetails\",response.data.id);\n            this.setState({\n            questionDetails: response.data,\n            currentid: response.data.id,\n            });\n        })\n        .catch((error)=>console.log(error));\n    };\n\n    handleShowHidePostAnswer = (event) => {\n        // event.preventDefault();\n        console.log('showHidePostAnswer');\n        this.setState({\n            showHidePostAnswer: !this.state.showHidePostAnswer\n        })\n    }\n\n    postNewAnswer = (payload) => {\n        // console.log(\"before axios postnewanswer request\", questionID);\n        axios\n        .post(`http://localhost:8081/questions/${this.state.currentid}`, {\n            answer: payload,\n        })\n        .then((response) => {\n            console.log('response from posting answer to api', response.data);\n            // this.setState({\n            // this.state.questionDetails.answers.push(response.data.newAnswer);\n            // });\n            this.getQuestionDetailsData(this.state.currentid);\n        })\n        .catch((err) => console.log(err));\n    };\n\n    render(){\n        const {questionDetails} = this.state;\n        console.log(\"questionDetails from app.js\",questionDetails);\n        // const showHidePostAnswer = this.state.showHidePostAnswer ? (<div><h1>this is my answer</h1></div>) : null\n        const showHidePostAnswer = this.state.showHidePostAnswer ? (<div><PostAnswer questionDetails={questionDetails} postNewAnswer={this.postNewAnswer}/></div>) : null\n\n        return (\n            <div className=\"questionDetails\">\n                <Link to={`/`}>\n                <button className=\"questionDetails__goBack\">Go Back</button>\n                </Link>\n\n                <QuestionCard \n                description={questionDetails.description} \n                views={questionDetails.views}\n                asked_at={questionDetails.asked_at}\n                asked_on={questionDetails.asked_on}\n                type={questionDetails.type}\n                />\n\n                <button className=\"questionDetails__postAnswer \" type=\"submit\" onClick={() => this.handleShowHidePostAnswer(\"showHidePostAnswer\")}>Post Answer</button>\n                {showHidePostAnswer}\n                \n                <AnswerList \n                questionDetails={questionDetails} \n                // currentid={this.state.currentid}\n                />\n                \n\n                \n            </div>\n        )\n    }\n    \n}\n\nexport default QuestionDetails;\n","/Users/pratibha/Documents/Brainstation/productQ/client/src/components/Aside/Aside.jsx",["82"],"import React from 'react'\nimport './Aside.scss';\nimport { Link, Redirect} from 'react-router-dom';\n\nfunction Aside() {\n    return (\n        <div>\n        <aside className=\"main-section__left\">\n            <div className=\"main-section__asideText\">\n                <Link to={`/postQuestion`} className=\" \">\n                <button className=\"main-section__postQuestion\" type=\"submit\">Post Question</button>\n                </Link>\n                <h2 className=\"main-section__asideText\">ALL</h2>\n                <h2 className=\"main-section__asideText\">From me</h2>\n                <h2 className=\"main-section__asideText\">Read</h2>       \n            </div>\n        </aside>\n        </div>\n    )\n}\n\nexport default Aside\n","/Users/pratibha/Documents/Brainstation/productQ/client/src/components/Button/Button.jsx",[],"/Users/pratibha/Documents/Brainstation/productQ/client/src/components/AnswerCard/AnswerCard.jsx",["83","84"],"import React from 'react';\nimport avatar from \"../../assets/images/user-image.png\";\nimport FeedbackList from \"../FeedbackList/FeedbackList\";\nimport './AnswerCard.scss';\n\nfunction AnswerCard(props) {\n    // console.log(\"this props is from AnswerCard\",props);\n    const {feedbacks} = props;\n    // console.log(\"this feedbacks is from AnswerCard\",feedbacks);\n\n    return (      \n        <div>\n            <div className=\"main-section__answerContainer\">  \n                <div className=\"main-section__answerCard\">    \n                    <div className=\"main-section__userInfo\">\n                    <img className=\"main-section__userImage\" src={avatar} alt=\"user image\"/> \n                    <div>\n                        <p className=\"main-section__userName\">{props.name}</p>\n                        <p className=\"main-section__userPostedOn\">{new Date(props.posted_on).toLocaleDateString()}</p>\n                        {/* <p className=\"main-section__userPostedOn\">{props.posted_on}</p> */}\n                    </div>\n                </div>        \n                <p className=\"main-section__answerDescription\">{props.answer}</p>\n                <div className=\"main-section__answerGroup\">\n                    <p className=\"main-section__votesCount\">{props.votes}</p>\n                    <p className=\"main-section__votesText\">votes |</p>\n                    <p className=\"main-section__feedbackCount\">{feedbacks.length}</p>\n                    <p className=\"main-section__feedbackText\">feedback</p>\n                </div>\n                </div>\n                <div className=\"main-section__votesGroup\">\n                    {/* <p className=\"main-section__votesText\">Vote</p> */}\n                    <button className=\" \" type=\"submit\">Vote</button>\n                    {/* <p className=\"main-section__votesText\">Give feedback</p> */}\n                    <button className=\" \" type=\"submit\">Give Feedback</button>\n                </div>\n                {/* <FeedbackList FeedbackDetails={props.feedbacks}/> */}\n            </div>\n        </div>\n    )\n}\n\nexport default AnswerCard\n","/Users/pratibha/Documents/Brainstation/productQ/client/src/components/FeedbackCard/FeedbackCard.jsx",["85"],"import React from 'react';\nimport avatar from \"../../assets/images/user-image.png\";\nimport './FeedbackCard.scss';\n\nfunction FeedbackCard(props) {\n    const {feedbacks} = props.feedBackDetails;\n    console.log(\"feedbacks from feedbacklist\",feedbacks);\n\n    return (\n        <div>\n            <div className=\"main-section__feedbackContainer\">  \n                {/* <h3 className=\"main-section__feedbackTitle\">2 Feedbacks</h3> */}\n                <hr className=\"main-section__feedbackDivider\"/> \n                <div className=\"main-section__feedbackCard\">    \n                <div className=\"main-section__userInfo\">\n                    <img className=\"main-section__userImage\" src={avatar} alt=\"user image\"/> \n                    <div>\n                        <p className=\"main-section__userName\">{props.name}</p>\n                        <p className=\"main-section__userPostedOn\">{props.posted_on}</p>\n                    </div>\n                </div>        \n                <p className=\"main-section__feedbackDescription\">{props.feedback}</p> \n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default FeedbackCard\n","/Users/pratibha/Documents/Brainstation/productQ/client/src/components/AnswerList/AnswerList.jsx",[],"/Users/pratibha/Documents/Brainstation/productQ/client/src/components/QuestionCard/QuestionCard.jsx",["86"],"import React from 'react';\nimport views from '../../assets/icons/icon-views.svg';\nimport './QuestionCard.scss';\nimport AnswerList from '../AnswerList/AnswerList'\nimport { Link } from 'react-router-dom';\n\nfunction QuestionCard(props) {\n    return (\n        <div>\n            {/* <li onClick={() => {props.setActiveQuestion(props.id);}}> */}\n                <div className=\"main-section__questionCard\">\n                    {/* <a href=\"/\" onClick={() => {props.setActiveQuestion(props.id);}}> */}\n                    <Link to={`/question/${props.id}/${props.description}`}>\n                        <h2 className=\"main-section__question\">{props.description}</h2> \n                    </Link>\n                    {/* </a> */}\n                    <div className=\"main-section__questionGroup\">\n                        <h3 className=\"main-section__questionTime\">Asked at <span className=\"main-section__questionTime--bold\">{props.asked_at}</span> on {new Date(props.asked_on).toLocaleDateString()}</h3>  \n                        <div className=\"main-section__viewsGroup\">\n                            <p className=\"main-section__viewsCount\">10</p>\n                            <p className=\"main-section__viewsText\">answers /</p>\n                            <img className=\"main-section__viewsIcon\" src={views} alt=\"views icon\"/>\n                            <p className=\"main-section__viewsCount\">{props.views}</p>\n                            <p className=\"main-section__viewsText\">views</p>\n                        </div>\n                    </div>\n                    <hr className=\"main-section__questionDivider\"/>  \n                    <button className=\"main-section__categoryButton\" type=\"button\">{props.type}</button>\n                    <button className=\"main-section__companyButton\" type=\"button\">{props.asked_at}</button>\n                </div>\n                {/* <AnswerList \n                questionAnswerData={props.questionDetails} />   */}\n        \n            {/* </li> */}\n        </div>\n    )\n}\n\nexport default QuestionCard\n","/Users/pratibha/Documents/Brainstation/productQ/client/src/components/QuestionList/QuestionList.jsx",["87"],"import React from 'react'\nimport QuestionCard from '../QuestionCard/QuestionCard';\nimport './QuestionList.scss';\nimport { Link } from 'react-router-dom';\n\nfunction QuestionList(props) {\n    return (\n        <div>\n            <ul id=\"questionList\" className= \"questionList\">\n                {props.questions\n                // .sort((a,b) => new Date(b.question.asked_on) - new Date(b.question.asked_on)\n                .map((question) => (  \n                    <li className= \"questionList__item\" key={question.id}>  \n                        {/* <Link to={`/question/${question.id}`}>              */}\n\n                        <QuestionCard\n                            id = {question.id}\n                            description={question.description} \n                            asked_at={question.asked_at} \n                            views={question.views}\n                            type={question.type}\n                            asked_on={question.asked_on}\n                            answers={question.answers}\n                            // question={props.question}\n                            questionDetails={props.questionDetails}\n                            setActiveQuestion={props.setActiveQuestion}/> \n                        {/* </Link>  */}\n                    </li>             \n                ))}\n            </ul>\n            \n        </div>\n    )\n}\n\nexport default QuestionList\n","/Users/pratibha/Documents/Brainstation/productQ/client/src/components/FeedbackList/FeedbackList.jsx",[],{"ruleId":"88","severity":1,"message":"89","line":3,"column":42,"nodeType":"90","messageId":"91","endLine":3,"endColumn":48},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"88","severity":1,"message":"96","line":3,"column":10,"nodeType":"90","messageId":"91","endLine":3,"endColumn":14},{"ruleId":"88","severity":1,"message":"97","line":5,"column":8,"nodeType":"90","messageId":"91","endLine":5,"endColumn":14},{"ruleId":"88","severity":1,"message":"98","line":7,"column":8,"nodeType":"90","messageId":"91","endLine":7,"endColumn":20},{"ruleId":"88","severity":1,"message":"99","line":8,"column":8,"nodeType":"90","messageId":"91","endLine":8,"endColumn":18},{"ruleId":"88","severity":1,"message":"100","line":9,"column":8,"nodeType":"90","messageId":"91","endLine":9,"endColumn":20},{"ruleId":"88","severity":1,"message":"101","line":14,"column":8,"nodeType":"90","messageId":"91","endLine":14,"endColumn":18},{"ruleId":"102","severity":1,"message":"103","line":22,"column":25,"nodeType":"104","endLine":22,"endColumn":98},{"ruleId":"88","severity":1,"message":"105","line":2,"column":8,"nodeType":"90","messageId":"91","endLine":2,"endColumn":13},{"ruleId":"88","severity":1,"message":"106","line":66,"column":15,"nodeType":"90","messageId":"91","endLine":66,"endColumn":33},{"ruleId":"88","severity":1,"message":"107","line":7,"column":8,"nodeType":"90","messageId":"91","endLine":7,"endColumn":13},{"ruleId":"88","severity":1,"message":"108","line":3,"column":16,"nodeType":"90","messageId":"91","endLine":3,"endColumn":24},{"ruleId":"88","severity":1,"message":"109","line":3,"column":8,"nodeType":"90","messageId":"91","endLine":3,"endColumn":20},{"ruleId":"102","severity":1,"message":"103","line":16,"column":21,"nodeType":"104","endLine":16,"endColumn":93},{"ruleId":"102","severity":1,"message":"103","line":16,"column":21,"nodeType":"104","endLine":16,"endColumn":93},{"ruleId":"88","severity":1,"message":"101","line":4,"column":8,"nodeType":"90","messageId":"91","endLine":4,"endColumn":18},{"ruleId":"88","severity":1,"message":"96","line":4,"column":10,"nodeType":"90","messageId":"91","endLine":4,"endColumn":14},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","no-native-reassign",["110"],"no-negated-in-lhs",["111"],"'Link' is defined but never used.","'avatar' is defined but never used.","'QuestionCard' is defined but never used.","'AnswerCard' is defined but never used.","'FeedbackCard' is defined but never used.","'AnswerList' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'axios' is defined but never used.","'showHidePostAnswer' is assigned a value but never used.","'views' is defined but never used.","'Redirect' is defined but never used.","'FeedbackList' is defined but never used.","no-global-assign","no-unsafe-negation"]